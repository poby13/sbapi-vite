<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.cofile.sbapivite.mapper.MemberMapper">
    <resultMap id="MemberWithRoles" type="kr.co.cofile.sbapivite.entity.Member">
        <id property="id" column="id" />
        <result property="email" column="email" />
        <result property="nickname" column="nickname" />
        <result property="social" column="social" />
        <result property="enabled" column="enabled" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <result property="delFlag" column="del_flag" />
        <collection property="memberRoles" ofType="kr.co.cofile.sbapivite.entity.Role">
            <id property="id" column="id" />
            <result property="roleName" column="role_name" />
        </collection>
    </resultMap>

    <select id="selectMemberWithRolesById" parameterType="long" resultMap="MemberWithRoles">
        SELECT
            m.id, m.email, m.nickname, m.social, m.enabled, m.created_at, m.updated_at, m.del_flag,
            r.id
        FROM members m
                 LEFT JOIN member_roles mr ON m.id = mr.member_id
                 LEFT JOIN roles r ON r.id = mr.role_id
        WHERE m.id = #{id}
    </select>

    <select id="selectAllMember" resultMap="MemberWithRoles">
        SELECT
            m.id, m.email, m.nickname, m.social, m.enabled, m.created_at, m.updated_at, m.del_flag,
            r.id
        FROM members m
            LEFT JOIN member_roles mr ON m.id = mr.member_id
            LEFT JOIN roles r ON r.id = mr.role_id
        ORDER BY p.id
        <if test="sortOrder == 'ASC'">ASC</if>
        <if test="sortOrder == 'DESC'">DESC</if>
        LIMIT #{offset}, #{limit}
    </select>
</mapper>